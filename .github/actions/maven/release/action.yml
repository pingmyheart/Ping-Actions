name: Maven Release Action

on:
  workflow_call:
    inputs:
      java-version:
        description: "Java version to use for the release"
        required: true
        type: string
        default: "21"
  push:
    branches:
      - 'release/**'

jobs:
  release:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ github.inputs.java-version }}
          distribution: 'temurin'

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config credential.helper store
          echo "https://oauth2:${{ github.token }}:@github.com" > ~/.git-credentials

      - name: Get release version from pom.xml
        id: get_release_version
        run: |
          release_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          clean_version=${release_version%-SNAPSHOT}
          echo "RELEASE_VERSION=$clean_version" >> $GITHUB_ENV
          echo "Release version is $clean_version"

      - name: Set final release version (remove -SNAPSHOT)
        run: mvn versions:set -DnewVersion=${{ env.RELEASE_VERSION }} -DgenerateBackupPoms=false

      - name: Commit and push release version
        run: |
          git add pom.xml
          git commit -m "[GITHUB ACTION] - Set Release version to ${{ env.RELEASE_VERSION }}"
          git push origin HEAD

      - name: Merge release into main
        run: |
          git fetch origin main
          git checkout main
          git merge --allow-unrelated-histories -m "[GITHUB ACTION] - Merge release into main" ${{ github.ref_name }}
          git push origin main

      - name: Checkout develop and bump patch version from release
        run: |
          git fetch origin develop
          git checkout develop
          
          # Extract version parts
          IFS='.' read -r major minor patch <<<"${{ env.RELEASE_VERSION }}"
          next_patch=$((patch + 1))
          next_version="${major}.${minor}.${next_patch}-SNAPSHOT"
          
          mvn versions:set -DnewVersion=${next_version} -DgenerateBackupPoms=false
          
          git add .
          git commit -m "[GITHUB ACTION] - Update version for next development"
          git push origin develop